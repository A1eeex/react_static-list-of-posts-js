{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","utils/utils.js","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","App","postsFromServer","idUser","userId","usersFromServer","find","postId","commentsFromServer","filter","ReactDOM","render","document","getElementById"],"mappings":"s18IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAIL,qBAAKE,UAAU,oBAAf,SAAoCD,QCZ7BG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SAEIG,EAASC,KAAI,SAAAR,GAAO,OAClB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQS,UCTVC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,QCEGW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOH,EAAyBE,EAAzBF,KAAMR,EAAmBU,EAAnBV,KAAMI,EAAaM,EAAbN,SAE3B,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEjC,8BACG,eACAH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGP,UAAU,iBAAb,SAA+BD,IAE9BI,EAASQ,OACR,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,qCCvBGS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,WCAbS,EAAM,WACjB,IAAMD,EAAQE,EAAgBX,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MCLsBS,EDKNP,EAAKQ,OCJhBC,EAAgBC,MAAK,SAAAZ,GAAI,OAAIA,EAAKF,KAAOW,MAAW,MDKzDb,UCFyBiB,EDEFX,EAAKJ,GCDvBgB,EAAmBC,QAAO,SAAA1B,GAAO,OAAIA,EAAQwB,SAAWA,QAD1D,IAAsBA,EAJHJ,KDSxB,OACE,0BAAShB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QEZvBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9288fa48.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">{body}</div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {\n      comments.map(comment => (\n        <CommentInfo\n          comment={comment}\n          key={comment.id}\n        />\n      ))\n    }\n  </div>\n);\n","export const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { title, user, body, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n          {user && <UserInfo user={user} />}\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">{body}</p>\n\n      {comments.length ? (\n        <CommentList comments={comments} />\n      ) : (\n        <>\n          <hr />\n\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport { getUserId, getCommentId } from './utils/utils';\nimport { PostList } from './components/PostList';\n\nexport const App = () => {\n  const posts = postsFromServer.map(post => ({\n    ...post,\n    user: getUserId(post.userId),\n    comments: getCommentId(post.id),\n  }));\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n      <PostList posts={posts} />\n    </section>\n  );\n};\n","\nimport commentsFromServer from '../api/comments.json';\nimport usersFromServer from '../api/users.json';\n\nexport function getUserId(idUser) {\n  return usersFromServer.find(user => user.id === idUser) || null;\n}\n\nexport function getCommentId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}